var cov_7n3n5jubm=function(){var path='/home/osboxes/Documents/sharedServer/lib/postgres.js',hash='6c07ee5e37a6e7944125218e8586ee4f759a2d09',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/osboxes/Documents/sharedServer/lib/postgres.js',statementMap:{'0':{start:{line:1,column:13},end:{line:1,column:39}},'1':{start:{line:2,column:13},end:{line:2,column:52}},'2':{start:{line:4,column:0},end:{line:32,column:1}},'3':{start:{line:5,column:1},end:{line:30,column:4}},'4':{start:{line:19,column:5},end:{line:24,column:3}},'5':{start:{line:20,column:12},end:{line:20,column:31}},'6':{start:{line:21,column:6},end:{line:21,column:21}},'7':{start:{line:23,column:6},end:{line:23,column:21}},'8':{start:{line:27,column:5},end:{line:27,column:23}},'9':{start:{line:28,column:6},end:{line:28,column:27}},'10':{start:{line:29,column:6},end:{line:29,column:63}},'11':{start:{line:31,column:4},end:{line:31,column:11}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:4,column:18},end:{line:4,column:19}},loc:{start:{line:4,column:43},end:{line:32,column:1}},line:4},'1':{name:'(anonymous_1)',decl:{start:{line:18,column:11},end:{line:18,column:12}},loc:{start:{line:18,column:26},end:{line:26,column:2}},line:18},'2':{name:'(anonymous_2)',decl:{start:{line:26,column:12},end:{line:26,column:13}},loc:{start:{line:26,column:27},end:{line:30,column:2}},line:26}},branchMap:{'0':{loc:{start:{line:19,column:5},end:{line:24,column:3}},type:'if',locations:[{start:{line:19,column:5},end:{line:24,column:3}},{start:{line:19,column:5},end:{line:24,column:3}}],line:19}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0},f:{'0':0,'1':0,'2':0},b:{'0':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var models=(++cov_7n3n5jubm.s[0],require('../models/index'));var logger=(++cov_7n3n5jubm.s[1],require('log4js').getLogger("Postgres"));++cov_7n3n5jubm.s[2];exports.getUser=function(req,res,next){++cov_7n3n5jubm.f[0];++cov_7n3n5jubm.s[3];models.Users.find({where:{$or:[{UserID:req.query.id},{Email:req.query.email}]},attributes:['UserID','Name','LastName','Email','FechaNacimiento']}).then(function(user){++cov_7n3n5jubm.f[1];++cov_7n3n5jubm.s[4];if(!user){++cov_7n3n5jubm.b[0][0];++cov_7n3n5jubm.s[5];res.statusCode=401;++cov_7n3n5jubm.s[6];res.json('{}');}else{++cov_7n3n5jubm.b[0][1];++cov_7n3n5jubm.s[7];res.json(user);}}).catch(function(err){++cov_7n3n5jubm.f[2];++cov_7n3n5jubm.s[8];logger.error(err);++cov_7n3n5jubm.s[9];res.statusCode=500;++cov_7n3n5jubm.s[10];res.json({errors:['No se puede obtener el usuario']});});++cov_7n3n5jubm.s[11];next();};